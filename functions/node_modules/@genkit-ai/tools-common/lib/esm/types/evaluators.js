import { z } from 'zod';
export const ScoreSchema = z.object({
    id: z
        .string()
        .describe('Optional ID to differentiate different scores if applying in a single evaluation')
        .optional(),
    score: z.number().optional(),
    error: z.string().optional(),
    details: z
        .object({
        reasoning: z.string().optional(),
    })
        .passthrough()
        .optional(),
});
export const TestCaseSchema = z.object({
    sampleIndex: z.number(),
    testCaseId: z.string().optional(),
    traceId: z.string().optional(),
    spanId: z.string().optional(),
    evaluation: z.union([ScoreSchema, z.array(ScoreSchema)]),
});
export const EvalResponseSchema = z.array(TestCaseSchema);
//# sourceMappingURL=evaluators.js.map