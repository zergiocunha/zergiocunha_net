"use strict";
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
var prompt_exports = {};
__export(prompt_exports, {
  definePrompt: () => definePrompt,
  isExecutablePrompt: () => isExecutablePrompt,
  isPrompt: () => isPrompt,
  renderPrompt: () => renderPrompt
});
module.exports = __toCommonJS(prompt_exports);
var import_core = require("@genkit-ai/core");
function isPrompt(arg) {
  var _a, _b;
  return typeof arg === "function" && ((_b = (_a = arg.__action) == null ? void 0 : _a.metadata) == null ? void 0 : _b.type) === "prompt";
}
function definePrompt(registry, config, fn) {
  const a = (0, import_core.defineAction)(
    registry,
    __spreadProps(__spreadValues({}, config), {
      actionType: "prompt",
      metadata: __spreadProps(__spreadValues({}, config.metadata || { prompt: {} }), { type: "prompt" })
    }),
    fn
  );
  return a;
}
function renderPrompt(registry, params) {
  return __async(this, null, function* () {
    var _a, _b;
    let prompt;
    if (typeof params.prompt === "string") {
      prompt = yield registry.lookupAction(`/prompt/${params.prompt}`);
    } else {
      prompt = params.prompt;
    }
    const rendered = yield prompt(
      params.input
    );
    return {
      model: params.model,
      config: __spreadValues(__spreadValues({}, rendered.config || {}), params.config),
      messages: rendered.messages.slice(0, rendered.messages.length - 1),
      prompt: rendered.messages[rendered.messages.length - 1].content,
      docs: params.docs,
      output: {
        format: (_a = rendered.output) == null ? void 0 : _a.format,
        schema: (_b = rendered.output) == null ? void 0 : _b.schema
      },
      tools: rendered.tools || []
    };
  });
}
function isExecutablePrompt(obj) {
  return !!(obj == null ? void 0 : obj.render) && !!(obj == null ? void 0 : obj.asTool) && !!(obj == null ? void 0 : obj.stream);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  definePrompt,
  isExecutablePrompt,
  isPrompt,
  renderPrompt
});
//# sourceMappingURL=prompt.js.map